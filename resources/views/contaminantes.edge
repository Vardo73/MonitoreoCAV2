@layout('master')

@section('contaminantes')

<div class="container">
    <hr/>
        <h2 style="text-align: center;"><span style="color: #2aa5d6;">Contaminantes</span></h2>
    <hr/>
</div>

<br>
<div class="container">
    <!--SELECT -->
    <div class="row mx-auto justify-content-around">
        <div class="col col-6 align-self-end">
            <div class="d-grid gap-2  mx-auto">
                    <div class="row">
                        <div class="col ">
                            <label class="form-label fs-4" for="SelEstacionE" id='lbltitulo'>Contaminante:</label>
                            <select class="form-control" name="SelContaminanteC" id="SelContaminanteC" required>
                                <option value='0' selected >Seleccione un contaminante (todos)</option>
                                @each(contaminante in contaminantes)
                                    <option  value='{{ contaminante.id }}'>{{ contaminante.name }}</option>
                                @endeach
                            </select>
                        </div>
                    </div>
            </div>
        </div>

        <!-- BOTON -->
        <div class="col col-4 align-self-end">
            <div class="d-grid gap-2 mx-auto ">
                <button class="btn btn-primary" id="modalNuevoContaminante" data-bs-toggle="modal" data-bs-target="#ContaminanteModal">Agregar Nuevo</button>
            </div>
        </div>
    </div>

    <br>

    <div id="CardsContaminante">
        @each(contaminante in contaminantes)
        <div class="card {{ contaminante.id }}" name='tarjeta'>
            <div class="card-header">
                <div class="row mx-auto">
                    <div class="col col-3 ">
                        <h3 >{{ contaminante.name }}</h4>
                    </div>
                    <div class="col col-3 d-grid gap-2 mx-auto">
                        <button id="btnBandera" onclick="AB({{ contaminante.id }})" class="btn btn-success" data-bs-target="#BanderaModal" data-bs-toggle="modal" data-bs-dismiss="modal">Agregar Bandera</button>    
                    </div>
                    <div class="col col-3 d-grid gap-2 mx-auto">
                        <button id="modalEditContaminante" onclick="MostrarContaminante({{ contaminante.id }},'{{ contaminante.name }}')" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#ContaminanteEditModal">Editar</button>
                    </div>
                    <div class="col col-3 d-grid gap-2 mx-auto">
                        <button id="btnEliminarContaminante" onclick="EliminarContaminante({{ contaminante.id }})" class="btn btn-danger">Eliminar</button>
                    </div>

                </div>
            </div>
            <div class="card-body">
            <h5 class="card-title">Banderas</h5>
            @each(bandera in banderas)

            @if(bandera.idC==contaminante.id)
            <div class="card">
                <h5 class="card-header">{{ bandera.name }}</h5>
                <div class="card-body">

                    <div class="table-responsive">
                        <table class="table table-hover " name="tabAnual" id="tabAnual">
                            <thead>
                            <tr>
                                <th scope="col">Tipo</th>
                                <th scope="col">Descripción</th>
                                <th scope="col">OMS</th>
                                <th scope="col">NOM</th>
                            </tr>
                            </thead>
                            <tbody id="TabBodyC">
                                <tr>
                                    <td >{{ bandera.NomT}}</td>
                                    <td >{{ bandera.description}}</td>
                                    <td >{{ bandera.LimOMS }}</td>
                                    <td >{{ bandera.LimNOM }}</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="row mx-auto">
                        <div class="col col-6 d-grid gap-2 mx-auto">
                            <button  class="btn btn-info" onclick="MostrarBandera('{{ bandera.name}}',{{ bandera.idT }},'{{ bandera.description}}',{{ bandera.LimOMS }},{{ bandera.LimNOM }},{{ bandera.id}})"  data-bs-toggle="modal" data-bs-target="#BanderaModalEdit">Editar</button>
                        </div>
                        <div class="col col-6 d-grid gap-2 mx-auto">
                            <button  class="btn btn-danger" onclick="EliminarBandera({{ bandera.id}})">Eliminar</button>
                        </div>
                    </div>
                    
                </div>
            </div>
            <br>
            @endif

            @endeach
            </div>
        </div>
        <br>
        @endeach
    </div>

    
        <!-- MODAL CONTAMINANTE -->
        <div class="container-fluid">
            <div class="modal fade" id="ContaminanteModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h2>Agregar Contaminante</h2>
                        </div>
                        <div class="modal-body">
                            <div>
                                <label for="txtNombreContaminante">Nombre:</label>
                                <input class="form-control" type="text" name="txtNomContaminante" id="txtNomContaminante" required min="1" max="25">
                            </div>
                        </div>
                        
                        <div class="modal-footer">
                            <button class="btn btn-outline-primary" data-bs-dismiss="modal" id="btnCrearContaminante" name="btnCrearContaminante">Aceptar</button>
                            <button class="btn btn-outline-primary" name="btnCancelarContaminante" id="btnCancelarContaminante" data-bs-dismiss="modal">Cancelar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- MODAL EDITAR CONTAMINANTE -->
        <div class="container-fluid">
            <div class="modal fade" id="ContaminanteEditModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h2>Editar Nombre Contaminante</h2>
                        </div>
                        <div class="modal-body">
                            <div>
                                <label for="txtNomContaminanteEdit">Nombre:</label>
                                <input class="form-control" type="text" name="txtNomContaminanteEdit" id="txtNomContaminanteEdit" required min="1" max="25">
                            </div>
                        </div>
                        
                        <div class="modal-footer">
                            <button class="btn btn-outline-primary" onclick="EditarContaminante()" data-bs-dismiss="modal" id="btnEditarContaminante" name="btnEditarContaminante">Aceptar</button>
                            <button class="btn btn-outline-primary" name="btnCancelarContaminante" id="btnCancelarContaminante" data-bs-dismiss="modal">Cancelar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <!-- MODAL BANDERA -->
        <div class="container-fluid">
            <div class="modal fade" id="BanderaModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h2>Agregar Bandera</h2>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div class="col">
                                    <div>
                                        <label  class="form-label" for="txtNombreBandera">Nombre:</label>
                                        <input class="form-control" type="text" name="txtNomBandera" id="txtNomBandera" required  min="1" max="25">
                                    </div>
                                </div>
                                <div class="col">
                                    <div>
                                        <label class="form-label" for="SelTipoBan">Tipo:</label>
                                        <select class="form-control" name="SelTipoBan" id="SelTipoBan" required>
                                            <option value='0' selected disabled>Seleccione un tipo</option>
                                            @each(tipo in tipos)
                                                <option  value='{{ tipo.id }}'>{{ tipo.name }}</option>
                                            @endeach
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row" >
                                <div>
                                    <label  class="form-label" for="txtDesBandera">Descripción:</label>
                                    <textarea class="form-control" name="txtDesBandera" id="txtDesBandera" style="height: 100px" max="50"></textarea>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <div > 
                                        <label class="form-label" for="txtLimOMS">Limite OMS:</label>
                                        <input class="form-control" type="number" name="txtLimOMS" id="txtLimOMS" required min="1" max="99999999">
                                    </div>
                                </div>
                                <div class="col">
                                    <div > 
                                        <label class="form-label" for="txtLimNOM">Limite NOM:</label>
                                        <input class="form-control" type="number" name="txtLimNOM" id="txtLimNOM" required min="1" max="99999999">
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="modal-footer">
                            <input type="button" onclick="NuevaBandera()" class="btn btn-outline-primary" value="Aceptar" id="btnAgregarBandera" name="btnAgregarBandera" >
                            <button class="btn btn-outline-primary" name="btnCancelarBandera" id="btnCancelarBandera" data-bs-dismiss="modal">Cancelar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        
        <!-- MODAL Editar BANDERA -->
        <div class="container-fluid">
            <div class="modal fade" id="BanderaModalEdit" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h2>Editar Bandera</h2>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div class="col">
                                    <div>
                                        <label  class="form-label" for="txtNombreBanderaEdit">Nombre:</label>
                                        <input class="form-control" type="text" name="txtNomBanderaEdit" id="txtNomBanderaEdit" required  min="1" max="25">
                                    </div>
                                </div>
                                <div class="col">
                                    <div>
                                        <label class="form-label" for="SelTipoBanEdit">Tipo:</label>
                                        <select class="form-control" name="SelTipoBanEdit" id="SelTipoBanEdit" required>
                                            <option value='0' selected disabled>Seleccione un tipo</option>
                                            @each(tipo in tipos)
                                                <option  value='{{ tipo.id }}'>{{ tipo.name }}</option>
                                            @endeach
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row" >
                                <div>
                                    <label  class="form-label" for="txtDesBanderaEdit">Descripción:</label>
                                    <textarea class="form-control" name="txtDesBanderaEdit" id="txtDesBanderaEdit" style="height: 100px" max="50"></textarea>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <div > 
                                        <label class="form-label" for="txtLimOMSEdit">Limite OMS:</label>
                                        <input class="form-control" type="number" name="txtLimOMSEdit" id="txtLimOMSEdit" required min="1" max="99999999">
                                    </div>
                                </div>
                                <div class="col">
                                    <div > 
                                        <label class="form-label" for="txtLimNOMEdit">Limite NOM:</label>
                                        <input class="form-control" type="number" name="txtLimNOMEdit" id="txtLimNOMEdit" required min="1" max="99999999">
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="modal-footer">
                            <input type="button" onclick="EditarBandera()" class="btn btn-outline-primary" value="Aceptar" id="btnEditBandera" name="btnEditBandera" >
                            <button class="btn btn-outline-primary" name="btnCancelarBandera" id="btnCancelarBandera" data-bs-dismiss="modal">Cancelar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
</div>

@entryPointScripts('contaminantes')

<script>
    
    const ruta=yourGlobalVariable+'/contaminante';
    let idCont=0;
    let idBan=0;
        
    function NoVacio(elementos){
        var falta=0;
        elementos.forEach(element => {
            if(element=="" || element==0){
                falta++;
            }
        });

        if(falta>0){
            Swal.fire({
                text:"Faltan campos por llenar.",
                icon: "warning",
                timer:1000,
                timerProgressBar: true
            })
            return false;
        }
        return true;
    }

    function MostrarContaminante(id,name){
        idCont=id;
        let txtNomContaminanteEdit=document.getElementById('txtNomContaminanteEdit');
        txtNomContaminanteEdit.value=name;
    }
    
    function EditarContaminante(){
        let txtNomContaminanteEdit=document.getElementById('txtNomContaminanteEdit');
        
        if(txtNomContaminanteEdit.value!=''){

            axios({
                method: 'post',
                url: ruta+'/edit/',
                data: {
                    id:idCont,
                    name:txtNomContaminanteEdit.value
                }
            })
            .then(function (response) {
            if(response.data[0]==true){
                Swal.fire({
                    text:response.data[1],
                    icon: "success",
                    timer:1000,
                    timerProgressBar: true
                }).then((result)=>{
                    location.reload();
                });
            }
            if(response.data[0]==false){
                Swal.fire({
                    text:response.data[1].messages.errors[0].message,
                    icon: "error",
                    timer:5000,
                    timerProgressBar: true
                }).then((result)=>{
                location.reload();
                });
            }
            })
            .catch(function (error) {
                console.log(error);
                Swal.fire({
                    text:error,
                    icon: "error",
                    timer:5000,
                    timerProgressBar: true
                }).then((result)=>{
                });
            });
        }else{
            Swal.fire({
                text:'No ha ingresado un nombre.',
                icon: "error",
                timer:5000,
                timerProgressBar: true
            })
        }
    }
        
    function EliminarContaminante(id){
        Swal.fire({
            title: 'Está seguro de eliminar este contaminante?',
            showCancelButton: true,
            confirmButtonText: `Eliminar`,
            denyButtonText: `Cancelar`,
        }).then((result)=>{
            if (result.isConfirmed){
                axios({
                    method: 'post',
                    url: ruta+'/delete/',
                    data: {
                        id:id
                    }
                })
                .then(function (response) {
                    if(response.data[0]==true){
                    Swal.fire({
                        text:response.data[1],
                        icon: "success",
                        timer:1000,
                        timerProgressBar: true
                    }).then((result)=>{
                        location.reload();
                    });
                    }
                    if(response.data[0]==false){
                    Swal.fire({
                        text:response.data[1].messages.errors[0].message,
                        icon: "error",
                        timer:5000,
                        timerProgressBar: true
                    }).then((result)=>{
                        location.reload();
                    });
                    }
                })
                .catch(function (error) {
                    err++;
                    return [false, error]
                });
            }
        })
    }

    function AB(id){
        idCont=id;
    }

    function NuevaBandera(){  
        let txtNomBandera=document.getElementById('txtNomBandera').value.trim();
        let SelTipoBan=document.getElementById('SelTipoBan').value;
        let txtDesBandera=document.getElementById('txtDesBandera').value.trim();
        let txtLimOMS=document.getElementById('txtLimOMS').value.trim();
        let txtLimNOM=document.getElementById('txtLimNOM').value.trim();
        
        const ele=[
            txtNomBandera,
            txtDesBandera,
            txtLimOMS,
            txtLimNOM,
            SelTipoBan
        ]

        if(NoVacio(ele)){
            axios({
                method: 'post',
                url: ruta+'/bandera/store/',
                data: {
                    name: txtNomBandera,
                    contaminante_id:idCont,
                    tipo_id:SelTipoBan,
                    description:txtDesBandera,
                    limOMS:txtLimOMS,
                    limNOM:txtLimNOM
                }
            })
            .then(function (response) {
                if(response.data[0]==true){
                    Swal.fire({
                        text:response.data[1],
                        icon: "success",
                        timer:1000,
                        timerProgressBar: true
                    }).then((result)=>{
                        location.reload();
                    });
                }
                if(response.data[0]==false){
                    alert('Error-1')
                    Swal.fire({
                        text:response.data[1].messages.errors[0].message,
                        icon: "error",
                        timer:5000,
                        timerProgressBar: true
                    }).then((result)=>{
                    location.reload();
                    });
                }
            })
            .catch(function (error) {
                alert('Error-2')
                console.log(error);
                Swal.fire({
                    text:error,
                    icon: "error",
                    timer:5000,
                    timerProgressBar: true
                }).then((result)=>{
                    //location.reload();
                });
            });
        }
    }

    function EliminarBandera(id){
        Swal.fire({
            title: 'Está seguro de eliminar esta bandera?',
            showCancelButton: true,
            confirmButtonText: `Eliminar`,
            denyButtonText: `Cancelar`,
        }).then((result)=>{
            if (result.isConfirmed){
                axios({
                    method: 'post',
                    url: ruta+'/bandera/delete',
                    data: {
                        id:id
                    }
                })
                .then(function (response) {
                    if(response.data[0]==true){
                    Swal.fire({
                        text:response.data[1],
                        icon: "success",
                        timer:1000,
                        timerProgressBar: true
                    }).then((result)=>{
                        location.reload();
                    });
                    }
                    if(response.data[0]==false){
                    Swal.fire({
                        text:response.data[1].messages.errors[0].message,
                        icon: "error",
                        timer:5000,
                        timerProgressBar: true
                    }).then((result)=>{
                        location.reload();
                    });
                    }
                })
                .catch(function (error) {
                    err++;
                    return [false, error]
                });
            }
        })
    }

    function MostrarBandera(name,tipo,des,limOms,limNom,id){
        idBan=id;
        let txtNomBanderaEdit=document.getElementById('txtNomBanderaEdit')
        let SelTipoBanEdit=document.getElementById('SelTipoBanEdit')
        let txtDesBanderaEdit=document.getElementById('txtDesBanderaEdit')
        let txtLimOMSEdit=document.getElementById('txtLimOMSEdit')
        let txtLimNOMEdit=document.getElementById('txtLimNOMEdit')

        txtNomBanderaEdit.value=name
        SelTipoBanEdit.value=tipo
        txtDesBanderaEdit.value=des
        txtLimOMSEdit.value=limOms
        txtLimNOMEdit.value=limNom
    }

    function EditarBandera(){
        let txtNomBanderaEdit=document.getElementById('txtNomBanderaEdit').value.trim();
        let SelTipoBanEdit=document.getElementById('SelTipoBanEdit').value;
        let txtDesBanderaEdit=document.getElementById('txtDesBanderaEdit').value.trim();
        let txtLimOMSEdit=document.getElementById('txtLimOMSEdit').value.trim();
        let txtLimNOMEdit=document.getElementById('txtLimNOMEdit').value.trim();
        
        const ele=[
            txtNomBanderaEdit,
            txtDesBanderaEdit,
            txtLimOMSEdit,
            txtLimNOMEdit,
            SelTipoBanEdit
        ]

        if(NoVacio(ele)){
            axios({
                method: 'post',
                url: ruta+'/bandera/edit/',
                data: {
                    id:idBan,
                    name: txtNomBanderaEdit,
                    tipo_id:SelTipoBanEdit,
                    description:txtDesBanderaEdit,
                    limOMS:txtLimOMSEdit,
                    limNOM:txtLimNOMEdit
                }
            })
            .then(function (response) {
                if(response.data[0]==true){
                    Swal.fire({
                        text:response.data[1],
                        icon: "success",
                        timer:1000,
                        timerProgressBar: true
                    }).then((result)=>{
                        location.reload();
                    });
                }
                if(response.data[0]==false){
                    alert('Error-1')
                    Swal.fire({
                        text:response.data[1].messages.errors[0].message,
                        icon: "error",
                        timer:5000,
                        timerProgressBar: true
                    }).then((result)=>{
                    location.reload();
                    });
                }
            })
            .catch(function (error) {
                alert('Error-2')
                console.log(error);
                Swal.fire({
                    text:error,
                    icon: "error",
                    timer:5000,
                    timerProgressBar: true
                }).then((result)=>{
                    //location.reload();
                });
            });
        }
    }
    
</script>

@end